{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA3CPQ,EAAAZ,GAASa,OAAOC,KAAK,CAAEC,SAAS,IAEnB,CACXC,KAAMC,SAASC,cAAc,SAG1BF,KAAKG,iBAAiB,UAAU,SAAAC,GACnCA,EAAIC,iBACJ,IAAMC,EAAS,CACbC,OAAQC,OAAOJ,EAAIK,OAAOC,SAASH,OAAOI,OAC1CC,WAAYJ,OAAOJ,EAAIK,OAAOC,SAAStB,MAAMuB,OAC7CE,UAAWL,OAAOJ,EAAIK,OAAOC,SAASI,KAAKH,QAEvCJ,EAAkCD,EAAlCC,OAAQK,EAA0BN,EAA1BM,WAAYC,EAAcP,EAAdO,UAC1B,IAAKE,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAC5B7B,EAAc6B,EAAGH,GACdI,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBQ,EAAAZ,GAASa,OAAOqB,QACd,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDgC,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBQ,EAAAZ,GAASa,OAAOwB,QACd,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAIjDwB,GAAcC,EACdS,QAAQC,IAAIR,EAAGH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nNotiflix.Notify.init({ useIcon: false });\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const values = {\n    amount: Number(evt.target.elements.amount.value),\n    firstDelay: Number(evt.target.elements.delay.value),\n    delayStep: Number(evt.target.elements.step.value),\n  };\n  let { amount, firstDelay, delayStep } = values;\n  for (i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    firstDelay += delayStep;\n    console.log(i, firstDelay);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","useIcon","form","document","querySelector","addEventListener","evt","preventDefault","values","amount","Number","target","elements","value","firstDelay","delayStep","step","i","then","param","success","concat","catch","failure","console","log"],"version":3,"file":"03-promises.7f9f1f95.js.map"}